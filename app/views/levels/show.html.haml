.level
  .row
    .span6
      .row-fluid
        .counter{class: "counter-7"}
        %h1.gamma.level-header #{@level.level_name}
  .row
    .span3.level-scoring
      .score-wrapper
        %ul.unstyled.score.large
          - @level_coins.times do |count|
            %li.score-indicator{ :class => "#{'complete' if count < @topics.collect{|topic| won_topic_coins(topic)}.inject(:+)}"}
        %span.delta #{@level_coins} of #{@topics.collect{|topic| won_topic_coins(topic)}.inject(:+)} coins to win
    .span9
      - @topics.each do |topic|
        .row-fluid.level-topic-wrapper.colored-block
          .span9
            .row-fluid.level-topic
              .span3
                .score-wrapper
                  %ul.unstyled.score
                    - topic_coins = topic.questions.collect { |question| H_COOKIES[question.question_type] }.inject(:+).to_i
                    - topic_coins.times do |count|
                      %li.score-indicator{ :class => "#{'complete' if count < won_topic_coins(topic)}"}

              .span9.topic-details
                %h2.delta= topic.title
                %p.topic-description= topic.description  
                %a.btn.btn-start-topic= link_to " Start topic", level_topic_path(@level, topic)
          .span3
            -# uses right and wrong classes to toggle
            - if Attempt.where(:user => current_user, :topic => topic).size == 0
              .topic-score.wrong
            - else
              - if topic.questions.count == Attempt.where(:user => current_user, :topic => topic, :solved => true).collect(&:solved).size           	      
                .topic-score.right
              - else
                .topic-score.wrong
  = render_shareable :url => request.url
